name: dotnet

on: [push, pull_request, workflow_dispatch]

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      csproj-exists: ${{ steps.csprojcheck.outputs.csprojcheck }}
    steps:
      - uses: actions/checkout@v4

      - name: Check for csproj files
        id: csprojcheck
        run: echo "csprojcheck=$(ls *.csproj &> /dev/null && echo true || echo false)" >> $GITHUB_OUTPUT

  build:
    name: Build in dotnet ${{ matrix.dotnet-version }}
    runs-on: ubuntu-latest
    needs: [check]
    if: needs.check.outputs.csproj-exists == 'true'
    strategy:
      matrix:
        dotnet-version: ["6", "7", "8", "9"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Display dotnet version
        run: dotnet --version

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release

      - name: Test
        run: dotnet test -c Release --logger GitHubActions

      - name: Publish
        run: dotnet publish -c Release

      - name: Package
        run: dotnet pack -c Release

  package:
    name: Package
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - name: Package
        id: package
        run: dotnet pack -c Release -o ./artifacts -p:PackageVersion=${GITHUB_REF/refs\/tags\/v/}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: ./artifacts/**.nupkg

  deploy-nuget-org:
    name: Deploy to Nuget
    runs-on: ubuntu-latest
    needs: [package]
    steps:
      - name: Check for NUGET_TOKEN Secret availability
        id: nuget-token-check
        shell: bash
        run: |
          if [ "${{ secrets.NUGET_TOKEN }}" != '' ]; then
            echo "defined=true" >> $GITHUB_OUTPUT;
          else
            echo "defined=false" >> $GITHUB_OUTPUT;
          fi

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: package

      - name: Publish the package to nuget.org
        if: steps.nuget-token-check.outputs.defined == 'true'
        run: dotnet nuget push *.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}

  deploy-github-packages:
    name: Deploy to GitHub Packages Registry
    runs-on: ubuntu-latest
    needs: [package]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: package

      - name: Publish the package to nuget.org
        run: dotnet nuget push *.nupkg -k $NUGET_AUTH_TOKEN -s https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
